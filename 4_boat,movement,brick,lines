#include<iostream>
using namespace std;
#include "iGraphics.h"

#define screenwidth 1227
#define screenheight 800
#define total_brick 60
#define left_par 14
#define right_par 13
#define brick_shuru_y 15
#define brick_width  100
#define brick_height  25
#define brick_col 5
#define brick_row 12


/*structure of bricks*/
struct brick_sructure
{
	int brick_x;
	int brick_y;


	int line_top_left[2];
	int line_top_right[2];
	int line_bottom_right[2];
	int line_bottom_left[2];

	bool brick_show = true;

};



/*rectangle color code*/
int rectangle_r = 41;
int rectangle_g = 41;
int rectangle_b = 41;


/*brick boundary line color code*/
int line_r = 255;
int line_g = 255;
int line_b = 255;


/*background image address*/
char bg[1][20] = {"image\\final_bg.bmp"};

/*boat image address*/
char boat[1][20] = { "image\\boatfinal.bmp" };


/* boat original image size
image x = 286px
 image y = 215px;
*/


/*boat main image coordination*/
int boat_image_x = 480; // 613-(286/2); // 613 = half of screenwidth, 286 = boat bottom surface length
int boat_image_y = 565;


/*saving movement of boat (original image)*/
int boat_image_movement_x = boat_image_x;
int boat_image_movement_y = boat_image_y;



/*boat bottom surface coordination*/
int boat_bottom_left_x = 499;
int boat_bottom_right_x = 710;



/*boat bottom surface length*/
int boat_bottom_length = boat_bottom_right_x - boat_bottom_left_x; // = 211;


/*boat movement with keyboard*/
int boat_keyboard_dx = 10;


/*taking a brick structure*/
brick_sructure brick[total_brick];



/*giving coordinattions to each brick*/
void brick_coordination_set()
{
	int starting_x = left_par;
	int starting_y = brick_shuru_y;

	int gese_brick = 0;

	for (int i = 0; i<brick_col; i++)
	{
		for (int j = 0; j<brick_row; j++)
		{

			brick[gese_brick].brick_x = starting_x;
			brick[gese_brick].brick_y = starting_y;


			/*setting up line for bricks*/
			brick[gese_brick].line_bottom_left[0] = starting_x;
			brick[gese_brick].line_bottom_left[1] = starting_y;

			brick[gese_brick].line_top_left[0] = starting_x;
			brick[gese_brick].line_top_left[1] = starting_y + brick_height;



			starting_x += brick_width;


			brick[gese_brick].line_bottom_right[0] = starting_x;
			brick[gese_brick].line_bottom_right[1] = starting_y;


			brick[gese_brick].line_top_right[0] = starting_x;
			brick[gese_brick].line_top_right[1] = starting_y + brick_height;



			gese_brick++;
		}

		starting_x = left_par;
		starting_y += brick_height;


	}
}




void background_image_set()
{
  iShowBMP(0, 0, bg[0]);
}



void boat_image_set()
{
	
	iShowBMP2(boat_image_movement_x, boat_image_movement_y, boat[0], 255);


	iSetColor(0, 0, 0);
	iLine(499, 0, 499, 800);
	iLine(710, 0, 710, 800);
	iLine(0, 625, 1227, 625);


	// boat length = 710 - 499 = 211
	// boat image x - boat bottom x = 625 - 480 = 145; 
}



void drawing_brick_rectangle()
{
	
	for (int i = 0; i < total_brick; i++)
	{
		if (brick[i].brick_show)
		{
			iSetColor(rectangle_r, rectangle_g, rectangle_b);
			iFilledRectangle(brick[i].brick_x, brick[i].brick_y, brick_width, brick_height);
		}
	}

}




void drawing_brick_lines()
{
	
	for (int i = 0; i < total_brick; i++)
	{
		if (brick[i].brick_show)
		{

			iSetColor(line_r, line_g, line_b);

			iLine(brick[i].line_top_left[0], brick[i].line_top_left[1], brick[i].line_top_right[0], brick[i].line_top_right[1]);
			iLine(brick[i].line_top_left[0], brick[i].line_top_left[1], brick[i].line_bottom_left[0], brick[i].line_bottom_left[1]);
			iLine(brick[i].line_bottom_left[0], brick[i].line_bottom_left[1], brick[i].line_bottom_right[0], brick[i].line_bottom_right[1]);
			iLine(brick[i].line_bottom_right[0], brick[i].line_bottom_right[1], brick[i].line_top_right[0], brick[i].line_top_right[1]);
		}
	}
}



void iDraw()
{

	iClear();

	background_image_set();
	boat_image_set();
	drawing_brick_rectangle();
	drawing_brick_lines();

}

void iMouseMove(int mx, int my){}
void iPassiveMouseMove(int mx, int my){}
void iMouse(int button, int state, int mx, int my){}

void iKeyboard(unsigned char key){}


void right_key_movement()
{
	int total = boat_bottom_right_x + boat_keyboard_dx;

	if (total <= (screenwidth - right_par))
	{
		boat_image_movement_x += boat_keyboard_dx;
		boat_bottom_left_x += boat_keyboard_dx;
		boat_bottom_right_x += boat_keyboard_dx;

	}

	else
	{

		int dif = screenwidth - right_par - 3 - total + boat_keyboard_dx;

		boat_image_movement_x += dif;
		boat_bottom_left_x += dif;
		boat_bottom_right_x += dif; 
	}
}


void left_key_movement()
{
	int total = boat_bottom_left_x - boat_keyboard_dx;
	if (total >= left_par+5)
	{
		boat_image_movement_x -= boat_keyboard_dx;
		boat_bottom_left_x -= boat_keyboard_dx;
		boat_bottom_right_x -= boat_keyboard_dx;

	}
	else
	{

		int dif = boat_bottom_left_x - left_par-5;

		boat_image_movement_x -= dif;
		boat_bottom_left_x -= dif;
		boat_bottom_right_x -= dif;
	}

}


	void iSpecialKeyboard(unsigned char key)
{

	if (key == GLUT_KEY_RIGHT) right_key_movement();
	if (key == GLUT_KEY_LEFT)  left_key_movement();
	
}


int main()
{

	
	iInitialize(screenwidth, screenheight, "IN YOUR SERVICE");
	brick_coordination_set();
	iStart();
	return 0;
}
